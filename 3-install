https://blog.csdn.net/Jackkii/article/details/99414678



Requirement: https://tensorflow.google.cn/install/source#linux




0.

https://blog.csdn.net/Jackkii/article/details/99414678

sudo apt-get install python3-pip python3-dev
python3 -m pip install –upgrade pip  



0.   

sudo vim /usr/bin/pip3
 

from pip import main
if __name__ == '__main__':
    sys.exit(main())

To:   

from pip import __main__
if __name__ == '__main__':
    sys.exit(__main__._main())
 




1.  https://blog.csdn.net/alphonse2017/article/details/89493645
sudo apt-get install build-essential cmake pkg-config
sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev  protobuf-compiler
sudo apt-get install libhdf5-serial-dev hdf5-tools zlib1g-dev  libjpeg9-dev libhdf5-dev
sudo apt-get install libgflags-dev libgoogle-glog-dev
sudo add-apt-repository universe
sudo add-apt-repository main
sudo apt-get update
sudo apt-get install libopenblas-dev libatlas-base-dev 
 
sudo pip3 install grpcio absl-py py-cpuinfo psutil portpicker grpcio six mock requests gast astor termcolor


sudo apt-get install libjpeg-dev 

sudo apt install liblapack-dev
sudo apt install libblas-dev
sudo apt install gfortran


sudo pip3 install protobuf  (sudo pip3 install --upgrade protobuf)
sudo pip3 install testresources
sudo pip3 install numpy grpcio absl-py py-cpuinfo psutil portpicker six mock requests gast


 sudo apt-get install libhdf5-serial-dev hdf5-tools
 sudo apt-get install python3-pip
 pip3 install -U pip
 sudo apt-get install zlib1g-dev zip libjpeg8-dev libhdf5-dev 
 will fail: sudo python3 -m pip install -U numpy grpcio absl-py py-cpuinfo psutil portpicker grpcio six mock requests gast h5py astor termcolor


#***
 sudo apt update && apt install -y python3-h5py
 #***


sudo pip3 install keras-applications keras-preprocessing wrapt google-pasta

sudo apt-get install zip libjpeg8-dev



Python Packages：
sudo pip3 install cython
sudo pip3 install sklearn pandas 
sudo pip3 install pyyaml

Dependences：
sudo apt-get install libgtk-3-dev libavcodec-dev libavformat-dev python-dev python-numpy python-tk libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev libswscale-dev libopenexr-dev libeigen3-dev libfaac-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev libqt4-dev libqt4-opengl-dev sphinx-common texlive-latex-extra libv4l-dev libatlas-base-dev libqtgui4 python3-pyqt5 python3-dev qt5-default


sudo pip3 install scipy
# 如果安装太慢，使用 sudo apt-get python3-scipy
  
  
protobuf：
sudo apt-get install autoconf automake libtool curl make g++ unzip

Bazel：
sudo apt-get install zlib1g-dev unzip openjdk-8-jdk


（caffee）  http://www.luohanjie.com/2019-07-17/nvidia-jetson-nano.html
sudo apt-get install libhdf5-serial-dev libleveldb-dev libprotobuf-dev libsnappy-dev protobuf-compiler libgflags-dev libgoogle-glog-dev liblmdb-dev libatlas-base-dev libblas-dev libatlas-base-dev

sudo apt-get install --no-install-recommends libboost-all-dev



——+——+——+——+——+——+——+——+——+——+——+——   2015-05-15 在JP4.3 上安装还是失败
https://scikit-image.org/docs/stable/install.html
Installing  scikit-image： 

b. Debian and Ubuntu

Install all the required dependencies:
sudo apt-get install python3-matplotlib python3-numpy python3-pil python3-scipy python3-tk

Install suitable compilers:
sudo apt-get install build-essential cython3

sudo pip3 install scikit-image
——+——+——+——+——+——+——+——+——+——+——+——





2.tensorflow:
sudo pip3 install --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v43 tensorflow-gpu==2.0.0+nv20.1
#https://developer.download.nvidia.com/compute/redist/jp/v43/


3.testing the tensorflow：

import tensorflow as tf
print(tf.__version__)



4. Install the pytorch：
sudo wget https://nvidia.box.com/shared/static/ncgzus5o23uck9i5oth2n8n06k340l6k.whl -O torch-1.4.0-cp36-cp36m-linux_aarch64.whl
sudo apt-get install libopenblas-base
#sudo pip3 install Cython
sudo pip3 install torch-1.4.0-cp36-cp36m-linux_aarch64.whl

Testing:

python3
import torch
print(torch.__version__)



5.
torchvision：

sudo apt-get install libjpeg-dev zlib1g-dev
git clone -b v0.3.0 https://github.com/pytorch/vision torchvision   #0.6.0
cd torchvision
sudo python3.6 setup.py install
#  https://blog.csdn.net/u011119817/article/details/99679350

------------
torchvision       安装成功过： 0.6.0版本最新。

$ sudo apt-get install libjpeg-dev zlib1g-dev
$ git clone --branch <version> https://github.com/pytorch/vision torchvision   # see below for version of torchvision to download
$ cd torchvision
$ sudo python setup.py install
$ cd ../  # attempting to load torchvision from build dir will result in import error
$ pip install 'pillow<7' # not needed for torchvision v0.5.0+
#https://forums.developer.nvidia.com/t/pytorch-for-jetson-nano-version-1-5-0-now-available/72048
#  就算完成了安装0.6.0 也不能识别  pointrend 的分割代码。最后显示：


-----------------------------------------------------------
jet@jet-desktop:~/Documents/PointRend-PyTorch-master--ok$ python3.6 main.py configs/default.yaml test_codes
Traceback (most recent call last):
  File "main.py", line 16, in <module>
    from model import deeplabv3, PointHead, PointRend
  File "/home/jet/Documents/PointRend-PyTorch-master--ok/model/__init__.py", line 2, in <module>
    from torchvision.models.resnet import resnet50, resnet101
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/__init__.py", line 5, in <module>
    from torchvision import models
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/models/__init__.py", line 12, in <module>
    from . import detection
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/models/detection/__init__.py", line 1, in <module>
    from .faster_rcnn import *
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/models/detection/faster_rcnn.py", line 7, in <module>
    from torchvision.ops import misc as misc_nn_ops
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/ops/__init__.py", line 13, in <module>
    _register_custom_op()
  File "/usr/local/lib/python3.6/dist-packages/torchvision-0.7.0a0-py3.6-linux-aarch64.egg/torchvision/ops/_register_onnx_ops.py", line 51, in _register_custom_op
    register_custom_op_symbolic('torchvision::_new_empty_tensor_op', new_empty_tensor_op, _onnx_opset_version)
  File "/usr/local/lib/python3.6/dist-packages/torch/onnx/__init__.py", line 200, in register_custom_op_symbolic
    return utils.register_custom_op_symbolic(symbolic_name, symbolic_fn, opset_version)
  File "/usr/local/lib/python3.6/dist-packages/torch/onnx/utils.py", line 793, in register_custom_op_symbolic
    .format(symbolic_name))
RuntimeError: Failed to register operator torchvision::_new_empty_tensor_op.                            The symbolic name must match the format Domain::Name,                            and sould start with a letter and contain only                            alphanumerical characters


-----------------------------------------------------------






6.  Install the keras：

sudo apt-get install python3-scipy
sudo pip3 install keras
or
sudo apt-get install python3-keras


7.

pip uninstall apex
git clone https://www.github.com/nvidia/apex
cd apex
sudo python3.6 setup.py install

 

https://blog.csdn.net/weixin_44501699/article/details/105671622


